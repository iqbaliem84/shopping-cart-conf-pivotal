
spring:
  profiles: cloud
  redis:
    host: ${vcap.services.catalog-redis.credentials.hostname:localhost}
    port: ${vcap.services.catalog-redis.credentials.port:6379}
---
spring:
  profiles: development
  redis:
    host: 192.168.99.100
    port: 6379
  datasource:
    url: jdbc:mysql://192.168.99.100:3306/dev?useSSL=false
    username: root
    password: dbpass
    initialize: false
eureka:
  instance:
    prefer-ip-address: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
---
spring:
  profiles: docker
  redis:
    host: redis
    port: 6379
  datasource:
    url: jdbc:mysql://mysql:3306/dev?useSSL=false
    username: root
    password: dbpass
    initialize: true
eureka:
  instance:
    prefer-ip-address: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://discovery-service:8761/eureka/
---
spring:
  profiles: test
  redis:
    host: localhost
    port: 6379
  jpa:
    database: H2
  datasource:
    initialize: false
---
spring:
  profiles: openshift
  redis:
    host: ${OPENSHIFT_REDIS_HOST}
    port: ${OPENSHIFT_REDIS_PORT}
    password: ${REDIS_PASSWORD}
  jpa:
    show_sql: true
    database: H2
    database-platform: org.hibernate.dialect.H2Dialect
  datasource:
    url: jdbc:h2:mem:catalogdb;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: 
    initialize: false
    testWhileIdl: true
    validationQuery: SELECT 1
eureka:
  instance:
    # prefer-ip-address: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://discovery-service-uncrated-doper.cfapps.io/eureka/
---
spring:
  profiles: dev
  redis:
    host: 192.168.99.100
    port: 6379
  jpa:
    show_sql: true
    database: H2
    database-platform: org.hibernate.dialect.H2Dialect
  datasource:
    url: jdbc:h2:mem:catalogdb;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: 
    initialize: false
    testWhileIdl: true
    validationQuery: SELECT 1
eureka:
  instance:
    # prefer-ip-address: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://discovery-service:8761/eureka/
